name: Lint and Test Charts

on: [pull_request, workflow_dispatch]

jobs:
  cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
 
      - name: Create Kubernetes cluster
        id: kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.10.0
          image: kindest/node:v1.20.2
        
      - name: Test
        env:
          KIND_CLUSTER_NAME: kind
          SKIP_CLUSTER_CREATION: true
          DUCKDNS_DOMAIN: '${{ secrets.DUCKDNS_DOMAIN }}'
          DUCKDNS_TOKEN: '${{ secrets.DUCKDNS_TOKEN }}'
        run: |
          KIND_LOG_LEVEL="6"
          set -o errexit
          set -o nounset
          set -o pipefail

          kind get kubeconfig > $HOME/.kube/kind-config-kind
          export KUBECONFIG="${KUBECONFIG:-$HOME/.kube/kind-config-$KIND_CLUSTER_NAME}"
          echo "Kubernetes cluster:"
          kubectl get nodes -o wide

          echo "[dev] installing helm..."
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          helm repo add jetstack https://charts.jetstack.io
          helm repo update

          echo "[dev] installing cert-manager..."
          helm install --wait --timeout 60s \
          cert-manager jetstack/cert-manager \
          --namespace cert-manager \
          --version v1.2.0 \
          --set 'extraArgs={--dns01-recursive-nameservers=8.8.8.8:53\,1.1.1.1:53}' \
          --create-namespace \
          --set installCRDs=true
          kubectl get pods -n cert-manager

          echo "[dev] installing cert-manager-webhook-duckdns..."
          helm install --wait --timeout 60s cert-manager-webhook-duckdns \
          --namespace cert-manager \
          --set duckdns.domain='${DUCKDNS_DOMAIN}' \
          --set duckdns.token='${DUCKDNS_TOKEN}' \
          --set clusterIssuer.production.create=true \
          --set clusterIssuer.staging.create=true \
          --set clusterIssuer.email=test@example.com \
          --set logLevel=2 \
          ./charts/cert-manager-webhook-duckdns
          kubectl get pods -n cert-manager
        